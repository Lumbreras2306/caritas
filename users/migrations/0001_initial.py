# Generated by Django 5.2.5 on 2025-08-28 00:44

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('albergues', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Nombre de usuario')),
                ('first_name', models.CharField(max_length=150, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=150, verbose_name='Apellido')),
                ('is_active', models.BooleanField(default=True, verbose_name='Usuario activo')),
                ('is_staff', models.BooleanField(default=True, verbose_name='Es staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Es superusuario')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='Último acceso')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('main_hostel', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='albergues.hostel', verbose_name='Albergue principal')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Administrador',
                'verbose_name_plural': 'Administradores',
                'ordering': ['-last_login'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True, verbose_name='Desactivado en')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(db_index=True, max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="El número telefónico debe estar en formato: '+XX XXXXXXXXXX'.", regex='^\\+\\d{1,3}\\s\\d{7,15}$')], verbose_name='Número telefónico')),
                ('first_name', models.CharField(max_length=150, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=150, verbose_name='Apellido')),
                ('age', models.PositiveIntegerField(verbose_name='Edad')),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=1, verbose_name='Género')),
                ('poverty_level', models.PositiveIntegerField(help_text='Pobreza extrema <= 6.5, Pobreza moderada <= 8.5, Fuera de riesgo <= 10', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(10)], verbose_name='Nivel de pobreza (5-10)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Cuenta activa')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Aprobado en')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='custom_users_approved', to=settings.AUTH_USER_MODEL, verbose_name='Aprobado por')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deactivated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deactivated', to=settings.AUTH_USER_MODEL, verbose_name='Desactivado por')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PreRegisterUser',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True, verbose_name='Desactivado en')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('phone_number', models.CharField(db_index=True, max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="El número telefónico debe estar en formato: '+XX XXXXXXXXXX'.", regex='^\\+\\d{1,3}\\s\\d{7,15}$')], verbose_name='Número telefónico')),
                ('age', models.PositiveIntegerField()),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=1)),
                ('privacy_policy_accepted', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('approved', 'Aprobado'), ('rejected', 'Rechazado')], default='pending', max_length=15)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deactivated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deactivated', to=settings.AUTH_USER_MODEL, verbose_name='Desactivado por')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
            ],
            options={
                'verbose_name': 'Usuario pre-registro',
                'verbose_name_plural': 'Usuarios pre-registro',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OTPCode',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True, verbose_name='Desactivado en')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('purpose', models.CharField(choices=[('login', 'Login'), ('signup', 'Signup'), ('password_reset', 'Password reset'), ('phone_change', 'Phone change')], max_length=32)),
                ('channel', models.CharField(choices=[('sms', 'SMS'), ('whatsapp', 'Whatsapp'), ('email', 'Email')], max_length=16)),
                ('hashed_code', models.CharField(max_length=255)),
                ('expires_at', models.DateTimeField(db_index=True)),
                ('consumed_at', models.DateTimeField(blank=True, null=True)),
                ('attempts', models.PositiveSmallIntegerField(default=0)),
                ('max_attempts', models.PositiveSmallIntegerField(default=5)),
                ('meta_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('meta_ua', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deactivated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deactivated', to=settings.AUTH_USER_MODEL, verbose_name='Desactivado por')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otps', to='users.customuser')),
            ],
            options={
                'verbose_name': 'Código de verificación OTP',
                'verbose_name_plural': 'Códigos de verificación OTP',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'purpose'], name='users_otpco_user_id_21d7ba_idx'), models.Index(fields=['user', 'purpose', 'expires_at'], name='users_otpco_user_id_e62e93_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('consumed_at__isnull', True)), fields=('user', 'purpose'), name='uniq_active_otp_per_user_purpose'), models.CheckConstraint(condition=models.Q(('max_attempts__gte', 1)), name='otp_max_attempts_gte_1')],
            },
        ),
    ]
